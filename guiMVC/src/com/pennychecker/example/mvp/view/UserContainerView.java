/**
 * Copyright [2011] Steffen Kämpke
 * mailto: sk@pennychecker.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.pennychecker.example.mvp.view;

import com.pennychecker.example.mvp.presenter.UserContainerPresenter;
import java.awt.CardLayout;
import javax.swing.JComponent;

/**
 *
 * @author Steffen Kämpke
 */
public class UserContainerView extends javax.swing.JPanel implements UserContainerPresenter.Display{
    private static final long serialVersionUID = 1L;

    public UserContainerView() {
        initComponents();
        this.setLayout(new CardLayout());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new CardLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void showComponent(JComponent jc) {
        CardLayout cardLayout = (CardLayout) this.getLayout();
        cardLayout.show(this, jc.getName());
    }

    @Override
    public void addComponent(JComponent jc) {
        this.add(jc.getName(), jc);
    }

    @Override
    public void removeComponent(JComponent jc) {
        this.remove(jc);
    }

    @Override
    public JComponent asComponent() {
        return this;
    }
}

